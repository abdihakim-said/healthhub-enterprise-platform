service: hh-medical-image
plugins:
  - serverless-webpack
  - serverless-s3-cleaner

custom:
  serverless-s3-cleaner:
    # Names of buckets to remove before a stack is removed, or via 'sls s3remove' command
    buckets:
      - ${self:provider.environment.S3_BUCKET}

  webpack:
    includeModules: true
    packager: "npm"
    excludeFiles: src/**/*.test.js
provider:
  name: aws
  runtime: nodejs18.x
  timeout: 29
  versionFunctions: false
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-east-1'}
  environment:
    # Secrets Manager secret names (secure approach)
    GOOGLE_SECRET_NAME: "healthhub/${self:provider.stage}/google-vision-credentials"
    MEDICAL_IMAGE_TABLE: ${self:service}-${self:provider.stage}-medical-images
    S3_BUCKET: hh-${self:provider.stage}-${aws:accountId}-medical-images
    
    # Fallback environment variables (for backward compatibility during migration)
    GOOGLE_PROJECT_ID: ${file(./google-credentials.json):project_id}
    GOOGLE_PRIVATE_KEY: ${file(./google-credentials.json):private_key}
    GOOGLE_CLIENT_EMAIL: ${file(./google-credentials.json):client_email}
  iamRoleStatements:
    # DynamoDB permissions
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - dynamodb:DescribeTable
      Resource: "arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.MEDICAL_IMAGE_TABLE}"
    
    # S3 permissions
    - Effect: Allow
      Action:
        - s3:PutObject
        - s3:GetObject
        - s3:DeleteObject
        - s3:ListBucket
      Resource:
        - "arn:aws:s3:::${self:provider.environment.S3_BUCKET}"
        - "arn:aws:s3:::${self:provider.environment.S3_BUCKET}/*"
    
    # CRITICAL: Secrets Manager permissions
    - Effect: Allow
      Action:
        - secretsmanager:GetSecretValue
        - secretsmanager:DescribeSecret
      Resource: 
        - "arn:aws:secretsmanager:${self:provider.region}:*:secret:healthhub/${self:provider.stage}/google-vision-credentials*"
        - "arn:aws:secretsmanager:${self:provider.region}:*:secret:healthhub/dev/google-vision-credentials*"

# Remove resources section since DynamoDB table and S3 bucket already exist
# resources:
#   Resources:

functions:
  # Clean handlers with best practices - Secrets Manager only
  uploadImage:
    handler: src/handlers/medicalImage.upload
    events:
      - http:
          path: medical-images
          method: post
          cors: true

  getImage:
    handler: src/handlers/medicalImage.get
    events:
      - http:
          path: medical-images/{id}
          method: get
          cors: true

  updateImage:
    handler: src/handlers/medicalImage.update
    events:
      - http:
          path: medical-images/{id}
          method: put
          cors: true

  deleteImage:
    handler: src/handlers/medicalImage.remove
    events:
      - http:
          path: medical-images/{id}
          method: delete
          cors: true

  listImages:
    handler: src/handlers/medicalImage.list
    events:
      - http:
          path: medical-images
          method: get
          cors: true

  analyzeImage:
    handler: src/handlers/medicalImage.analyze
    events:
      - http:
          path: medical-images/{id}/analyze
          method: post
          cors: true

resources:
  Resources:
    MedicalImageTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:service}-${self:provider.stage}-medical-images
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: patientId
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: PatientIdIndex
            KeySchema:
              - AttributeName: patientId
                KeyType: HASH
            Projection:
              ProjectionType: ALL

    MedicalImageBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: hh-${self:provider.stage}-${aws:accountId}-medical-images
        CorsConfiguration:
          CorsRules:
            - AllowedHeaders:
                - "*"
              AllowedMethods:
                - GET
                - PUT
                - POST
                - DELETE
                - HEAD
              AllowedOrigins:
                - "*"
              MaxAge: 3000
